//Замыкания работают благодаря такому механизму, как лексическое окружение. Именно лексическое окружение(или лексический контекст) позволяет хранить все эти замкнутые данные и обращаться к ним при вызове функции, а также позволяет функции иметь доступ к внешним данным.
//Лексический контекст или лексическое окружение — это механизм в JavaScript, который позволяет функции во время её вызова получать доступ к переменным, константам и всему, что ей нужно.Каждый раз при вызове функции создаётся что - то вроде объекта словаря, который записывает все значения переменных и констант внутри функции, а также тех переменных и констант вне функции, к которым она обращается. 

// const houses = [];
// let i = 0;
// while (i < 10) {
//     let house = function () { // функция «дом»
//         console.log(i); // выводит номер дома
//     };
//     houses.push(house);
//     i++;
// }
// houses[0](); // 10 — у нулевого дома номер 10
// houses[7](); // 10 — и у седьмого дома номер 10

////
let house = function () { // функция «дом»
    // лексическое окружение: { i: 10 }
    console.log(i); // выводит номер дома
};

////
// const houses = [];
// let i = 0;
// while (i < 10) {
//     let houseNumber = i; // Здесь мы создаём блочную переменную, которая сохранит значение i для конкретной итерации цикла, и именно её значение попадёт в лексическое окружение функции house.
//     let house = function () { // функция «дом»
//         console.log(houseNumber); // выводит номер дома
//     };
//     houses.push(house);
//     i++;
// }
// houses[0](); // 0 — у нулевого дома номер 0
// houses[7](); // 7 — и у седьмого дома номер 7

////
const houses = [];
let i = 0;
while (i < 10) {
    let house = function () { // функция «дом»
        let houseNumber = i; // Здесь мы создаём блочную переменную, которая сохранит значение i, и именно её значение попадёт в лексическое окружение функции house.
            console.log(houseNumber); // выводит номер дома
    };
    houses.push(house);
    i++;
}
houses[0](); // 0 — у нулевого дома номер 0
houses[7](); // 7 — и у седьмого дома номер 7
