/**
 * WebSocket
Протокол WebSocket — это особый протокол передачи данных в сети. Он создаёт
постоянное соединение между сервером и клиентом и позволяет инициировать
передачу данных сервером. С его помощью легко реализуются чаты и онлайн-игры,
для которых требуется постоянное соединение.
Для работы с WebSocket существует специальный класс WebSocket, у которого есть
два метода и четыре события для работы, ничего сложного.
Вначале нужно создать экземпляр класса через конструктор, в параметре которого
нужно указать url с указанием специального протокола ws или wss — это ws с
использованием SSL-сертификата:
    const ws = new WebSocket('wss://example.com');
После создания экземпляра класса можно слушать события, которых всего 4:
● open — происходит при открытии соединения
● close — происходит при закрытии соединения
● error — происходит при ошибке
● message — пришло сообщение с данными
Сразу, как экземпляр создан, он начинает устанавливать соединение. Для этого
браузер сначала отправляет на сервер специальный http-запрос на сервер на
предмет поддержки сервером данного соединения. Если сервер отвечает
положительно, то далее идёт общение по протоколу WebSocket.
Мы можем отправить сообщения на сервер с помощью метода send(). Сообщения
разбиваются на фрагменты, которые могут быть одним из следующих типов:
● Текстовые
● Бинарные
● Пинг
● Фрейм закрытия
● Служебные
Текстовые и бинарные содержат соответствующие данные, отправляемые на
сервер. Пинги нужны для проверки соединения, на них сервер отвечает
автоматически.
Бинарные данные могут быть отправлены в формате Blob или ArrayBuffer.
C помощью метода close мы можем закрыть соединение.

 */